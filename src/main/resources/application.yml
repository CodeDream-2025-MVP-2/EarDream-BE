# EarDream Application Configuration

server:
  port: 8080

spring:
  application:
    name: eardream
  
  
  # 프로필별 설정
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
    
  # Oracle Database 연결 설정
  
  datasource:
    url: jdbc:oracle:thin:@senior_high?TNS_ADMIN=${ORACLE_TNS_ADMIN}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: oracle.jdbc.OracleDriver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5

# MyBatis 설정
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.eardream.domain.**.entity
  type-handlers-package: com.eardream.global.config
  configuration:
    map-underscore-to-camel-case: true
    use-generated-keys: true
    default-executor-type: reuse
    lazy-loading-enabled: false
    # 자동 타입 핸들러 등록
    auto-mapping-behavior: full
    # 자동 매핑 시 알 수 없는 컬럼 무시
    auto-mapping-unknown-column-behavior: none
    # 파라미터값 null 허용 (Oracle 호환)
    jdbc-type-for-null: VARCHAR

# Logging 설정 (MVP용 간단 설정)
logging:
  level:
    root: DEBUG
    com.eardream: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.mybatis: DEBUG
    org.springframework.boot.web.servlet.filter: DEBUG
    org.springframework.web.cors: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# JWT 인증 설정
jwt:
  secret: ${JWT_SECRET_KEY}
  access-token-expiration: 3600000    # 1시간 (밀리초)
  refresh-token-expiration: 604800000 # 7일 (밀리초)

# 카카오 OAuth 설정
kakao:
  client-id: ${KAKAO_CLIENT_ID}
  client-secret: ${KAKAO_CLIENT_SECRET}
  redirect-uri: ${KAKAO_REDIRECT_URI}

# 파일 업로드 설정 (EC2 로컬 파일 시스템)
file:
  upload:
    path: ./uploads
    max-size: 10MB

# 포트원 결제 설정
portone:
  api-url: ${PORTONE_API_URL:https://api.portone.io}
  api-key: ${PORTONE_API_KEY}
  api-secret: ${PORTONE_API_SECRET}
  store-id: ${PORTONE_STORE_ID}
  webhook-secret: ${PORTONE_WEBHOOK_SECRET}
  # 채널키 설정 (실제 포트원 설정에 맞게 수정 필요)
  channels:
    card: ${PORTONE_CHANNEL_CARD}
    kakaopay: ${PORTONE_CHANNEL_KAKAOPAY}
    bank: ${PORTONE_CHANNEL_BANK}


# Actuator 설정 (모니터링 및 헬스체크)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    oracle:
      enabled: true
    diskspace:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true


---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev
  
  # 프로덕션용 Oracle 서비스 (고성능)
  datasource:
    url: jdbc:oracle:thin:@senior_high?TNS_ADMIN=${ORACLE_TNS_ADMIN}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
logging:
  level:
    root: INFO
    com.eardream: DEBUG

# 개발 환경 Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: "*"

---
# 프로덕션 환경 설정
spring:
  config:
    activate:
      on-profile: prod

# 프로덕션용 Oracle 서비스 (고성능)
  datasource:
    url: jdbc:oracle:thin:@senior_high?TNS_ADMIN=${ORACLE_TNS_ADMIN}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
logging:
  level:
    root: DEBUG
    com.eardream: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.mybatis: DEBUG
    org.springframework.boot.web.servlet.filter: DEBUG
    org.springframework.web.cors: DEBUG
  file:
    name: /var/log/eardream/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 1GB

# 프로덕션 환경 Actuator 설정 (보안 강화)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never

