<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eardream.domain.subscription.mapper.SubscriptionMapper">

    <!-- Result Map 정의 (schema.sql 기반) -->
    <resultMap id="subscriptionResultMap" type="com.eardream.domain.subscription.entity.Subscription">
        <id property="id" column="id"/>
        <result property="familyId" column="family_id"/>
        <result property="planPrice" column="plan_price"/>
        <result property="status" column="status" 
                typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result property="nextBillingDate" column="next_billing_date"/>
        <result property="inicisBillkey" column="inicis_billkey"/>
        <result property="startedAt" column="started_at"/>
        <result property="cancelledAt" column="cancelled_at"/>
        <result property="pauseStartedAt" column="pause_started_at"/>
        <result property="pauseEndedAt" column="pause_ended_at"/>
    </resultMap>

    <!-- 구독 정보 생성 -->
    <insert id="insertSubscription" parameterType="com.eardream.domain.subscription.entity.Subscription"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO subscriptions (
            family_id,
            plan_price,
            status,
            next_billing_date,
            inicis_billkey,
            started_at,
            cancelled_at,
            pause_started_at,
            pause_ended_at
        ) VALUES (
            #{familyId},
            #{planPrice},
            #{status},
            #{nextBillingDate},
            #{inicisBillkey},
            #{startedAt},
            #{cancelledAt},
            #{pauseStartedAt},
            #{pauseEndedAt}
        )
    </insert>

    <!-- 구독 ID로 조회 -->
    <select id="findById" parameterType="long" resultMap="subscriptionResultMap">
        SELECT id,
               family_id,
               plan_price,
               status,
               next_billing_date,
               inicis_billkey,
               started_at,
               cancelled_at,
               pause_started_at,
               pause_ended_at
        FROM subscriptions
        WHERE id = #{id}
    </select>

    <!-- 가족 ID로 활성 구독 조회 -->
    <select id="findActiveByFamilyId" parameterType="long" resultMap="subscriptionResultMap">
        SELECT id,
               family_id,
               plan_price,
               status,
               next_billing_date,
               inicis_billkey,
               started_at,
               cancelled_at,
               pause_started_at,
               pause_ended_at
        FROM subscriptions
        WHERE family_id = #{familyId}
          AND status = 'ACTIVE'
        ORDER BY started_at DESC
        FETCH FIRST 1 ROWS ONLY
    </select>

    <!-- 가족 ID로 모든 구독 이력 조회 -->
    <select id="findAllByFamilyId" parameterType="long" resultMap="subscriptionResultMap">
        SELECT id,
               family_id,
               plan_price,
               status,
               next_billing_date,
               inicis_billkey,
               started_at,
               cancelled_at,
               pause_started_at,
               pause_ended_at
        FROM subscriptions
        WHERE family_id = #{familyId}
        ORDER BY started_at DESC
    </select>

    <!-- 구독 정보 수정 -->
    <update id="updateSubscription" parameterType="com.eardream.domain.subscription.entity.Subscription">
        UPDATE subscriptions
        SET family_id = #{familyId},
            plan_price = #{planPrice},
            status = #{status},
            next_billing_date = #{nextBillingDate},
            inicis_billkey = #{inicisBillkey},
            started_at = #{startedAt},
            cancelled_at = #{cancelledAt},
            pause_started_at = #{pauseStartedAt},
            pause_ended_at = #{pauseEndedAt}
        WHERE id = #{id}
    </update>

    <!-- 구독 상태 변경 -->
    <update id="updateStatus">
        UPDATE subscriptions
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <!-- 다음 결제일 업데이트 -->
    <update id="updateNextBillingDate">
        UPDATE subscriptions
        SET next_billing_date = #{nextBillingDate}
        WHERE id = #{id}
    </update>

    <!-- 이니시스 빌링키 업데이트 -->
    <update id="updateInicisBillkey">
        UPDATE subscriptions
        SET inicis_billkey = #{inicisBillkey}
        WHERE id = #{id}
    </update>

    <!-- 구독 삭제 (물리 삭제) -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM subscriptions
        WHERE id = #{id}
    </delete>

    <!-- 특정 날짜에 결제 예정인 구독 목록 조회 -->
    <select id="findByNextBillingDate" parameterType="java.time.LocalDate" resultMap="subscriptionResultMap">
        SELECT id,
               family_id,
               plan_price,
               status,
               next_billing_date,
               inicis_billkey,
               started_at,
               cancelled_at,
               pause_started_at,
               pause_ended_at
        FROM subscriptions
        WHERE next_billing_date = #{billingDate}
          AND status = 'ACTIVE'
        ORDER BY started_at
    </select>

    <!-- 구독 상태별 개수 조회 -->
    <select id="countByStatus" resultType="int">
        SELECT COUNT(*)
        FROM subscriptions
        WHERE status = #{status}
    </select>

    <!-- 전체 구독 개수 조회 -->
    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM subscriptions
    </select>

    <!-- 구독 해지 처리 (해지 일시 업데이트) -->
    <update id="cancelSubscription">
        UPDATE subscriptions
        SET status = 'CANCELLED',
            cancelled_at = SYSTIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 구독 일시정지 시작 -->
    <update id="pauseSubscription">
        UPDATE subscriptions
        SET status = 'PAUSED',
            pause_started_at = SYSTIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 구독 일시정지 종료 (재개) -->
    <update id="resumeSubscription">
        UPDATE subscriptions
        SET status = 'ACTIVE',
            pause_ended_at = SYSTIMESTAMP
        WHERE id = #{id}
    </update>

</mapper>