name: Security Scan

on:
  schedule:
    # 매주 월요일 오전 9시 (UTC) 실행
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'build.gradle'
      - 'src/**'

jobs:
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: build/reports/
        retention-days: 30

  snyk-security:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/gradle-jdk17@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        
    - name: Upload Snyk report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: snyk-report
        path: snyk-report.json
        retention-days: 30

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, snyk-security, secrets-scan]
    if: always()
    
    steps:
    - name: Download all reports
      uses: actions/download-artifact@v4
      
    - name: Create security summary
      run: |
        echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Dependency Check" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.dependency-check.result }}" == "success" ]; then
          echo "✅ No high-severity vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Vulnerabilities detected - check reports" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Snyk Security" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.snyk-security.result }}" == "success" ]; then
          echo "✅ No high-severity vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Vulnerabilities detected - check reports" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Secrets Scan" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.secrets-scan.result }}" == "success" ]; then
          echo "✅ No secrets exposed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Potential secrets found - immediate action required" >> $GITHUB_STEP_SUMMARY
        fi