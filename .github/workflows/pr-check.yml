name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run checkstyle
      run: ./gradlew checkstyleMain checkstyleTest || true
      
    - name: Run build
      run: ./gradlew build -x test
      
    - name: Run tests with coverage
      run: ./gradlew test jacocoTestReport
      env:
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        
    - name: Comment PR with test results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## üîç Code Quality Report\n\n';
          
          // Check if build succeeded
          try {
            const buildResult = '${{ job.status }}';
            comment += buildResult === 'success' ? '‚úÖ Build: PASSED\n' : '‚ùå Build: FAILED\n';
          } catch (e) {
            comment += '‚ùì Build: UNKNOWN\n';
          }
          
          comment += '\n### üìä Test Results\n';
          comment += 'Test results will be available in the Actions tab.\n\n';
          
          comment += '### üöÄ Next Steps\n';
          comment += '- Ensure all tests pass\n';
          comment += '- Review any code quality warnings\n';
          comment += '- Merge when ready for deployment\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run dependency check
      run: ./gradlew dependencyCheckAnalyze || true
      
    - name: Run security scan
      uses: github/super-linter@v5
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_JAVA: true
        VALIDATE_YAML: true
        VALIDATE_JSON: true
        VALIDATE_DOCKERFILE: false